<?xml version="1.0" encoding="UTF-8"?>
<entities do-package="com.dianping.cat.web" gen="true">
	<entity name="js-error-log" table="js_error_log" alias="jel">
	   	<member name="modules" value-type="String" all="false" select-expr="distinct module" length="19" nullable="false" />
	    <member name="count" value-type="long" all="false" select-expr="count(*)" length="19" nullable="false" />
	    <var name="start-time" value-type="Date" />
	    <var name="end-time" value-type="Date" />
	    <var name="offset" value-type="int" />
	   	<var name="limit" value-type="int" />
		<readsets>
      	<readset name="DISTINCT_MODULES">
      		<member name="modules"/>
      	</readset>
      	<readset name="COUNT-DATA">
      		<member name="count"/>
      		<member name="module"/>
      		<member name="level"/>
      	</readset>
      	</readsets>
		<query-defs>
		<query name="insert" type="INSERT" batch="true">
			<statement><![CDATA[INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>)]]></statement>
		</query>
		<query name="find-data-by-time-module-level-browser" type="SELECT" multiple="true">
			<param name="start-time" />
			<param name="end-time" />
			<param name="module" />
			<param name="level" />
			<param name="browser" />
			<param name="offset" />
			<param name="limit" />
			<statement><![CDATA[SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='error-time'/> >= ${start-time} 
			AND  <FIELD name='error-time'/> < ${end-time}
        <IF type='NOT_NULL' field='module'>
			AND  <FIELD name='module'/> = ${module}
		</IF>
		<IF type='NE' field='level' value='-1'>
			AND  <FIELD name='level'/> = ${level}
		</IF>
		<IF type='NOT_NULL' field='browser'>
			AND  <FIELD name='browser'/> = ${browser}
		</IF>
		LIMIT ${offset}, ${limit}
         ]]></statement>
		</query>
		<query name="find-count-by-time-module-level" type="SELECT" multiple="true">
			<param name="start-time" />
			<param name="end-time" />
		<statement><![CDATA[SELECT <FIELDS/>
        	FROM <TABLE/>
        	  WHERE <FIELD name='error-time'/> >= ${start-time} 
			AND  <FIELD name='error-time'/> < ${end-time}
			GROUP BY module, level
         ]]></statement>
		</query>
		<query name="find-modules" type="SELECT" multiple="true">
		<statement><![CDATA[SELECT <FIELDS/>
        	FROM <TABLE/>
         ]]></statement>
		</query>
		</query-defs>
	</entity>
	<entity name="js-error-log-content" table="js_error_log_content"
		alias="jelc">
		<query-defs>
		<query name="insert" type="INSERT" batch="true">
			<statement><![CDATA[INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>)]]></statement>
		</query>
		</query-defs>
	</entity>
	<entity name="ajax-data" table="ajax_data" alias="ad">
		<member name="access-number-sum" value-type="long" all="false"
			select-expr="sum(access_number)" length="19" nullable="false" />
		<member name="response-sum-time-sum" value-type="long" all="false"
			select-expr="sum(response_sum_time)" length="19" nullable="false" />
		<member name="request-sum-byte-sum" value-type="long" all="false"
			select-expr="sum(request_sum_byte)" length="19" nullable="false" />
		<member name="response-sum-byte-sum" value-type="long" all="false"
			select-expr="sum(response_sum_byte)" length="19" nullable="false" />
		<var name="api-id" value-type="int" />
		<var name="start-minute-order" value-type="int" />
		<var name="end-minute-order" value-type="int" />
		<readsets>
			<readset name="COUNT-DATA">
				<member name="minute-order" />
				<member name="access-number-sum" />
			</readset>
			<readset name="AVG-DATA">
				<member name="minute-order" />
				<member name="access-number-sum" />
				<member name="response-sum-time-sum" />
			</readset>
			<readset name="REQUEST-BYTE-AVG-DATA">
				<member name="minute-order" />
				<member name="access-number-sum" />
				<member name="request-sum-byte-sum" />
			</readset>
			<readset name="RESPONSE-BYTE-AVG-DATA">
				<member name="minute-order" />
				<member name="access-number-sum" />
				<member name="response-sum-byte-sum" />
			</readset>
			<readset name="SUCCESS-DATA">
				<member name="minute-order" />
				<member name="code" />
				<member name="access-number-sum" />
			</readset>
			<readset name="CODE-DATA">
				<member name="code" />
				<member name="access-number-sum" />
				<member name="response-sum-time-sum" />
			</readset>
			<readset name="OPERATOR-DATA">
				<member name="operator" />
				<member name="access-number-sum" />
			</readset>
			<readset name="CITY-DATA">
				<member name="city" />
				<member name="access-number-sum" />
			</readset>
			<readset name="NETWORK-DATA">
				<member name="network" />
				<member name="access-number-sum" />
			</readset>
		</readsets>
		<query-defs>
			<query name="insert" type="INSERT" batch="true">
				<statement><![CDATA[INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>)]]></statement>
			</query>
			<query name="insert-or-update" type="INSERT" batch="true">
				<statement><![CDATA[INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>) ON DUPLICATE KEY UPDATE 
        access_number = access_number + ${access-number},
        response_sum_time = response_sum_time + ${response-sum-time},
        request_sum_byte = request_sum_byte + ${request-sum-byte},
        response_sum_byte = response_sum_byte + ${response-sum-byte}
         ]]></statement>
			</query>
			<query name="delete-before-period" type="DELETE">
				<param name="period" />
				<statement><![CDATA[DELETE FROM <TABLE/>
        WHERE <FIELD name='period'/> <= ${period}]]></statement>
			</query>
			<query name="find-data-by-minute" type="SELECT" multiple="true">
				<param name="api-id" />
				<param name="period" />
				<param name="city" />
				<param name="operator" />
				<param name="code" />
				<param name="network" />
				<statement><![CDATA[SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='period'/> = ${period} 
        <IF type='NE' field='city' value='-1'>
			AND  <FIELD name='city'/> = ${city}
		</IF>
        <IF type='NE' field='operator' value='-1'>
			AND  <FIELD name='operator'/> = ${operator}
		</IF>
		<IF type='NE' field='code' value='-1'>
			AND  <FIELD name='code'/> = ${code}
		</IF>
		<IF type='NE' field='network' value='-1'>
			AND  <FIELD name='network'/> = ${network}
		</IF>
        group by  <FIELD name='minute-order'/>  ]]></statement>
			</query>
			<query name="find-daily-data-by-code" type="SELECT" multiple="true">
				<param name="api-id" />
				<param name="period" />
				<statement><![CDATA[SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='period'/> = ${period} 
        group by <FIELD name='code'/>  ]]></statement>
			</query>
			<query name="find-data-by-minute-code" type="SELECT" multiple="true">
				<param name="api-id" />
				<param name="period" />
				<param name="city" />
				<param name="operator" />
				<param name="code" />
				<param name="network" />
				<statement><![CDATA[SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='period'/> = ${period} 
        <IF type='NE' field='city' value='-1'>
			AND  <FIELD name='city'/> = ${city}
		</IF>
        <IF type='NE' field='operator' value='-1'>
			AND  <FIELD name='operator'/> = ${operator}
		</IF> 
		<IF type='NE' field='code' value='-1'>
			AND  <FIELD name='code'/> = ${code}
		</IF>
		<IF type='NE' field='network' value='-1'>
			AND  <FIELD name='network'/> = ${network}
		</IF>
        group by  <FIELD name='minute-order'/>,<FIELD name='code'/>  ]]></statement>
			</query>
			<query name="find-data-by-code" type="SELECT" multiple="true">
				<param name="api-id" />
				<param name="period" />
				<param name="city" />
				<param name="operator" />
				<param name="code" />
				<param name="network" />
				<param name="start-minute-order" />
				<param name="end-minute-order" />
				<statement><![CDATA[SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='period'/> = ${period}
        <IF type='NE' field='start-minute-order' value='-1'>
			AND  <FIELD name='minute-order'/> >= ${start-minute-order}
		</IF>
		<IF type='NE' field='end-minute-order' value='-1'>
			AND  <FIELD name='minute-order'/> <= ${end-minute-order}
		</IF> 
        <IF type='NE' field='city' value='-1'>
			AND  <FIELD name='city'/> = ${city}
		</IF>
        <IF type='NE' field='operator' value='-1'>
			AND  <FIELD name='operator'/> = ${operator}
		</IF>    
		<IF type='NE' field='code' value='-1'>
			AND  <FIELD name='code'/> = ${code}
		</IF>
		<IF type='NE' field='network' value='-1'>
			AND  <FIELD name='network'/> = ${network}
		</IF>
        group by  <FIELD name='code'/> ]]></statement>
			</query>
			<query name="find-data-by-operator" type="SELECT" multiple="true">
				<param name="api-id" />
				<param name="period" />
				<param name="city" />
				<param name="operator" />
				<param name="code" />
				<param name="network" />
				<param name="start-minute-order" />
				<param name="end-minute-order" />
				<statement><![CDATA[SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='period'/> = ${period} 
        <IF type='NE' field='start-minute-order' value='-1'>
			AND  <FIELD name='minute-order'/> >= ${start-minute-order}
		</IF>
		<IF type='NE' field='end-minute-order' value='-1'>
			AND  <FIELD name='minute-order'/> <= ${end-minute-order}
		</IF>
		<IF type='NE' field='city' value='-1'>
			AND  <FIELD name='city'/> = ${city}
		</IF>
        <IF type='NE' field='operator' value='-1'>
			AND  <FIELD name='operator'/> = ${operator}
		</IF>       
		<IF type='NE' field='code' value='-1'>
			AND  <FIELD name='code'/> = ${code}
		</IF>		
		<IF type='NE' field='network' value='-1'>
			AND  <FIELD name='network'/> = ${network}
		</IF>
        group by  <FIELD name='operator'/>  ]]></statement>
			</query>
			<query name="find-data-by-city" type="SELECT" multiple="true">
				<param name="api-id" />
				<param name="period" />
				<param name="city" />
				<param name="operator" />
				<param name="code" />
				<param name="network" />
				<param name="start-minute-order" />
				<param name="end-minute-order" />
				<statement><![CDATA[SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='period'/> = ${period} 
        <IF type='NE' field='start-minute-order' value='-1'>
			AND  <FIELD name='minute-order'/> >= ${start-minute-order}
		</IF>
		<IF type='NE' field='end-minute-order' value='-1'>
			AND  <FIELD name='minute-order'/> <= ${end-minute-order}
		</IF>
        <IF type='NE' field='city' value='-1'>
			AND  <FIELD name='city'/> = ${city}
		</IF>
        <IF type='NE' field='operator' value='-1'>
			AND  <FIELD name='operator'/> = ${operator}
		</IF>     
		<IF type='NE' field='code' value='-1'>
			AND  <FIELD name='code'/> = ${code}
		</IF>
		<IF type='NE' field='network' value='-1'>
			AND  <FIELD name='network'/> = ${network}
		</IF>	
        group by  <FIELD name='city'/>  ]]></statement>
	</query>
	<query name="find-data-by-network" type="SELECT" multiple="true">
		<param name="api-id" />
		<param name="period" />
		<param name="city" />
		<param name="operator" />
		<param name="code" />
		<param name="network" />
		<param name="start-minute-order" />
		<param name="end-minute-order" />
		<statement><![CDATA[SELECT <FIELDS/>
        FROM <TABLE/>
        WHERE <FIELD name='period'/> = ${period} 
        <IF type='NE' field='start-minute-order' value='-1'>
			AND  <FIELD name='minute-order'/> >= ${start-minute-order}
		</IF>
		<IF type='NE' field='end-minute-order' value='-1'>
			AND  <FIELD name='minute-order'/> <= ${end-minute-order}
		</IF>
        <IF type='NE' field='city' value='-1'>
			AND  <FIELD name='city'/> = ${city}
		</IF>
        <IF type='NE' field='operator' value='-1'>
			AND  <FIELD name='operator'/> = ${operator}
		</IF>     
		<IF type='NE' field='code' value='-1'>
			AND  <FIELD name='code'/> = ${code}
		</IF>
		<IF type='NE' field='network' value='-1'>
			AND  <FIELD name='network'/> = ${network}
		</IF>	
        group by  <FIELD name='network'/>  ]]></statement>
			</query>
		</query-defs>
	</entity>
  	<entity name="web-speed-data" table="web_speed_data" alias="wsd">
		<var name="speed-id" value-type="int" />
		<query-defs>
		<query name="insert" type="INSERT" batch="true">
			<statement><![CDATA[INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>)]]></statement>
		</query>
		<query name="insert-or-update" type="INSERT"  batch="true">
        <statement><![CDATA[INSERT INTO <TABLE/>(<FIELDS/>)
        VALUES(<VALUES/>) ON DUPLICATE KEY UPDATE 
        access_number1 = access_number1 + ${access-number1},
        access_number2 = access_number2 + ${access-number2},
        access_number3 = access_number3 + ${access-number3},
        access_number4 = access_number4 + ${access-number4},
        access_number5 = access_number5 + ${access-number5},
        access_number6 = access_number6 + ${access-number6},
        access_number7 = access_number7 + ${access-number7},
        access_number8 = access_number8 + ${access-number8},
        access_number9 = access_number9 + ${access-number9},
        access_number10 = access_number10 + ${access-number10},
        access_number11 = access_number11 + ${access-number11},
        access_number12 = access_number12 + ${access-number12},
        access_number13 = access_number13 + ${access-number13},
        access_number14 = access_number14 + ${access-number14},
        access_number15 = access_number15 + ${access-number15},
        access_number16 = access_number16 + ${access-number16},
        access_number17 = access_number17 + ${access-number17},
        access_number18 = access_number18 + ${access-number18},
        access_number19 = access_number19 + ${access-number19},
        access_number20 = access_number20 + ${access-number20},
        access_number21 = access_number21 + ${access-number21},
        access_number22 = access_number22 + ${access-number22},
        access_number23 = access_number23 + ${access-number23},
        access_number24 = access_number24 + ${access-number24},
        access_number25 = access_number25 + ${access-number25},
        access_number26 = access_number26 + ${access-number26},
        access_number27 = access_number27 + ${access-number27},
        access_number28 = access_number28 + ${access-number28},
        access_number29 = access_number29 + ${access-number29},
        access_number30 = access_number30 + ${access-number30},
        access_number31 = access_number31 + ${access-number31},
        access_number32 = access_number32 + ${access-number32},
        response_sum_time1 = response_sum_time1 + ${response-sum-time1},
        response_sum_time2 = response_sum_time2 + ${response-sum-time2},
        response_sum_time3 = response_sum_time3 + ${response-sum-time3},
        response_sum_time4 = response_sum_time4 + ${response-sum-time4},
        response_sum_time5 = response_sum_time5 + ${response-sum-time5},
        response_sum_time6 = response_sum_time6 + ${response-sum-time6},
        response_sum_time7 = response_sum_time7 + ${response-sum-time7},
        response_sum_time8 = response_sum_time8 + ${response-sum-time8},
        response_sum_time9 = response_sum_time9 + ${response-sum-time9},
        response_sum_time10 = response_sum_time10 + ${response-sum-time10},
        response_sum_time11 = response_sum_time11 + ${response-sum-time11},
        response_sum_time12 = response_sum_time12 + ${response-sum-time12},
        response_sum_time13 = response_sum_time13 + ${response-sum-time13},
        response_sum_time14 = response_sum_time14 + ${response-sum-time14},
        response_sum_time15 = response_sum_time15 + ${response-sum-time15},
        response_sum_time16 = response_sum_time16 + ${response-sum-time16},
        response_sum_time17 = response_sum_time17 + ${response-sum-time17},
        response_sum_time18 = response_sum_time18 + ${response-sum-time18},
        response_sum_time19 = response_sum_time19 + ${response-sum-time19},
        response_sum_time20 = response_sum_time20 + ${response-sum-time20},
        response_sum_time21 = response_sum_time21 + ${response-sum-time21},
        response_sum_time22 = response_sum_time22 + ${response-sum-time22},
        response_sum_time23 = response_sum_time23 + ${response-sum-time23},
        response_sum_time24 = response_sum_time24 + ${response-sum-time24},
        response_sum_time25 = response_sum_time25 + ${response-sum-time25},
        response_sum_time26 = response_sum_time26 + ${response-sum-time26},
        response_sum_time27 = response_sum_time27 + ${response-sum-time27},
        response_sum_time28 = response_sum_time28 + ${response-sum-time28},
        response_sum_time29 = response_sum_time29 + ${response-sum-time29},
        response_sum_time30 = response_sum_time30 + ${response-sum-time30},
        response_sum_time31 = response_sum_time31 + ${response-sum-time31},
        response_sum_time32 = response_sum_time32 + ${response-sum-time32}
         ]]></statement>
      </query>  
		</query-defs>
	</entity>
</entities>

